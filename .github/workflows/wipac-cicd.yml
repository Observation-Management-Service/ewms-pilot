name: wipac ci/cd

on: [push]


env:
  PULSAR_CONTAINER: pulsar_local


jobs:

  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: WIPACrepo/wipac-dev-flake8-action@v1

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: WIPACrepo/wipac-dev-mypy-action@v1

  py-setup:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - uses: WIPACrepo/wipac-dev-py-setup-action@v1.7.1

  py-versions:
    needs: [py-setup]
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.versions.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: versions
        uses: WIPACrepo/wipac-dev-py-versions-action@v2

  tests:
    needs: [py-versions]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: ${{ fromJSON(needs.py-versions.outputs.matrix) }}
        broker: ["", pulsar, rabbitmq, gcp, nats]
    steps:
      - uses: actions/checkout@v3
      - name: Start up Broker Docker Container
        run: |
          # Pulsar
          if [ -z "${{ matrix.broker }}" ] || [ "${{ matrix.broker }}" = "pulsar" ]; then
            docker run -i -d --rm \
                -p 6650:6650 \
                -p 8080:8080 \
                --name $PULSAR_CONTAINER apachepulsar/pulsar:2.6.0 /bin/bash \
                -c "sed -i s/brokerDeleteInactiveTopicsEnabled=.*/brokerDeleteInactiveTopicsEnabled=false/ /pulsar/conf/standalone.conf && bin/pulsar standalone"
            export DOCKERIZE_VERSION=v0.3.0
            wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            dockerize -wait tcp://localhost:8080 -timeout 1m
            dockerize -wait tcp://localhost:6650 -timeout 1m
          # elif
          fi
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.version }}
      - name: Pytest
        run: |
          pip install --upgrade pip wheel setuptools pytest
          if [ -z "${{ matrix.broker }}" ]; then
            pip install .[test]
          else
            pip install .[test, ${{ matrix.broker }}]
          fi
          pytest -vvv

  release:
    if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' }}
    needs: [py-setup, tests]
    runs-on: ubuntu-latest
    concurrency: release
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
    - name: Python Semantic Release
      uses: relekang/python-semantic-release@master
      with:
        github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        repository_username: __token__
        repository_password: ${{ secrets.PYPI_TOKEN }}
